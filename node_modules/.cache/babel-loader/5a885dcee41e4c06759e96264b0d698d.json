{"ast":null,"code":"import _defineProperty from \"/home/temir/projects/react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/temir/projects/react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/temir/projects/react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/temir/projects/react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/temir/projects/react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/temir/projects/react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/temir/projects/react-app/src/components/Add.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar Add =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Add, _React$Component);\n\n  function Add() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Add);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Add)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: \"\",\n      text: \"\",\n      bigText: \"\",\n      agree: false\n    };\n\n    _this.onBtnClickHandler = function (e) {\n      e.preventDefault();\n      var _this$state = _this.state,\n          name = _this$state.name,\n          text = _this$state.text,\n          bigText = _this$state.bigText;\n\n      _this.props.onAddNews({\n        id: +new Date(),\n        author: name,\n        text: text,\n        bigText: bigText\n      });\n    };\n\n    _this.handleChange = function (e) {\n      var _e$currentTarget = e.currentTarget,\n          id = _e$currentTarget.id,\n          value = _e$currentTarget.value;\n\n      _this.setState(_defineProperty({}, id, value));\n    };\n\n    _this.handleCheckboxChange = function (e) {\n      _this.setState({\n        agree: e.currentTarget.checked\n      });\n    };\n\n    _this.validate = function () {\n      var _this$state2 = _this.state,\n          name = _this$state2.name,\n          text = _this$state2.text,\n          agree = _this$state2.agree;\n\n      if (name.trim() && text.trim() && agree) {\n        return true;\n      }\n\n      return false;\n    };\n\n    return _this;\n  }\n\n  _createClass(Add, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state3 = this.state,\n          name = _this$state3.name,\n          text = _this$state3.text,\n          bigText = _this$state3.bigText;\n      return React.createElement(\"form\", {\n        className: \"add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"name\",\n        type: \"text\",\n        onChange: this.handleChange,\n        className: \"add__author\",\n        placeholder: \"\\u0412\\u0430\\u0448\\u0435 \\u0438\\u043C\\u044F\",\n        value: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        id: \"text\",\n        onChange: this.handleChange,\n        className: \"add__text\",\n        placeholder: \"\\u0422\\u0435\\u043A\\u0441\\u0442 \\u043D\\u043E\\u0432\\u043E\\u0441\\u0442\\u0438\",\n        value: text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        id: \"bigText\",\n        onChange: this.handleChange,\n        className: \"add__text\",\n        placeholder: \"\\u0422\\u0435\\u043A\\u0441\\u0442 \\u043D\\u043E\\u0432\\u043E\\u0441\\u0442\\u0438 \\u043F\\u043E\\u0434\\u0440\\u043E\\u0431\\u043D\\u043E\",\n        value: bigText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"add__checkrule\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        onChange: this.handleCheckboxChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), \" \\u042F \\u0441\\u043E\\u0433\\u043B\\u0430\\u0441\\u0435\\u043D \\u0441 \\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u0430\\u043C\\u0438\"), React.createElement(\"button\", {\n        className: \"add__btn\",\n        onClick: this.onBtnClickHandler,\n        disabled: !this.validate(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u043E\\u0432\\u043E\\u0441\\u0442\\u044C\"));\n    }\n  }]);\n\n  return Add;\n}(React.Component);\n\nAdd.propTypes = {\n  onAddNews: PropTypes.func.isRequired\n};\nexport { Add };","map":{"version":3,"sources":["/home/temir/projects/react-app/src/components/Add.js"],"names":["React","PropTypes","Add","state","name","text","bigText","agree","onBtnClickHandler","e","preventDefault","props","onAddNews","id","Date","author","handleChange","currentTarget","value","setState","handleCheckboxChange","checked","validate","trim","Component","propTypes","func","isRequired"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IAEMC,G;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,IAAI,EAAE,EAFA;AAGNC,MAAAA,OAAO,EAAE,EAHH;AAINC,MAAAA,KAAK,EAAE;AAJD,K;;UAMRC,iB,GAAoB,UAAAC,CAAC,EAAI;AACvBA,MAAAA,CAAC,CAACC,cAAF;AADuB,wBAES,MAAKP,KAFd;AAAA,UAEfC,IAFe,eAEfA,IAFe;AAAA,UAETC,IAFS,eAETA,IAFS;AAAA,UAEHC,OAFG,eAEHA,OAFG;;AAGvB,YAAKK,KAAL,CAAWC,SAAX,CAAqB;AACnBC,QAAAA,EAAE,EAAE,CAAC,IAAIC,IAAJ,EADc;AAEnBC,QAAAA,MAAM,EAAEX,IAFW;AAGnBC,QAAAA,IAAI,EAAJA,IAHmB;AAInBC,QAAAA,OAAO,EAAPA;AAJmB,OAArB;AAMD,K;;UACDU,Y,GAAe,UAAAP,CAAC,EAAI;AAAA,6BACIA,CAAC,CAACQ,aADN;AAAA,UACVJ,EADU,oBACVA,EADU;AAAA,UACNK,KADM,oBACNA,KADM;;AAElB,YAAKC,QAAL,qBAAiBN,EAAjB,EAAsBK,KAAtB;AACD,K;;UACDE,oB,GAAuB,UAAAX,CAAC,EAAI;AAC1B,YAAKU,QAAL,CAAc;AAAEZ,QAAAA,KAAK,EAAEE,CAAC,CAACQ,aAAF,CAAgBI;AAAzB,OAAd;AACD,K;;UACDC,Q,GAAW,YAAM;AAAA,yBACe,MAAKnB,KADpB;AAAA,UACPC,IADO,gBACPA,IADO;AAAA,UACDC,IADC,gBACDA,IADC;AAAA,UACKE,KADL,gBACKA,KADL;;AAEf,UAAIH,IAAI,CAACmB,IAAL,MAAelB,IAAI,CAACkB,IAAL,EAAf,IAA8BhB,KAAlC,EAAyC;AACvC,eAAO,IAAP;AACD;;AACD,aAAO,KAAP;AACD,K;;;;;;;6BACQ;AAAA,yBACyB,KAAKJ,KAD9B;AAAA,UACCC,IADD,gBACCA,IADD;AAAA,UACOC,IADP,gBACOA,IADP;AAAA,UACaC,OADb,gBACaA,OADb;AAEP,aACE;AAAM,QAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,EAAE,EAAC,MADL;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,QAAQ,EAAE,KAAKU,YAHjB;AAIE,QAAA,SAAS,EAAC,aAJZ;AAKE,QAAA,WAAW,EAAC,6CALd;AAME,QAAA,KAAK,EAAEZ,IANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EASE;AACE,QAAA,EAAE,EAAC,MADL;AAEE,QAAA,QAAQ,EAAE,KAAKY,YAFjB;AAGE,QAAA,SAAS,EAAC,WAHZ;AAIE,QAAA,WAAW,EAAC,2EAJd;AAKE,QAAA,KAAK,EAAEX,IALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,EAgBE;AACE,QAAA,EAAE,EAAC,SADL;AAEE,QAAA,QAAQ,EAAE,KAAKW,YAFjB;AAGE,QAAA,SAAS,EAAC,WAHZ;AAIE,QAAA,WAAW,EAAC,4HAJd;AAKE,QAAA,KAAK,EAAEV,OALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBF,EAuBE;AAAO,QAAA,SAAS,EAAC,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,QAAQ,EAAE,KAAKc,oBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,2HAvBF,EA2BE;AACE,QAAA,SAAS,EAAC,UADZ;AAEE,QAAA,OAAO,EAAE,KAAKZ,iBAFhB;AAGE,QAAA,QAAQ,EAAE,CAAC,KAAKc,QAAL,EAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uGA3BF,CADF;AAqCD;;;;EAtEatB,KAAK,CAACwB,S;;AAyEtBtB,GAAG,CAACuB,SAAJ,GAAgB;AACdb,EAAAA,SAAS,EAAEX,SAAS,CAACyB,IAAV,CAAeC;AADZ,CAAhB;AAIF,SAASzB,GAAT","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nclass Add extends React.Component {\n    state = {\n      name: \"\",\n      text: \"\",\n      bigText: \"\",\n      agree: false\n    };\n    onBtnClickHandler = e => {\n      e.preventDefault();\n      const { name, text, bigText } = this.state;\n      this.props.onAddNews({\n        id: +new Date(),\n        author: name,\n        text,\n        bigText\n      });\n    };\n    handleChange = e => {\n      const { id, value } = e.currentTarget;\n      this.setState({ [id]: value });\n    };\n    handleCheckboxChange = e => {\n      this.setState({ agree: e.currentTarget.checked });\n    };\n    validate = () => {\n      const { name, text, agree } = this.state;\n      if (name.trim() && text.trim() && agree) {\n        return true;\n      }\n      return false;\n    };\n    render() {\n      const { name, text, bigText } = this.state;\n      return (\n        <form className=\"add\">\n          <input\n            id=\"name\"\n            type=\"text\"\n            onChange={this.handleChange}\n            className=\"add__author\"\n            placeholder=\"Ваше имя\"\n            value={name}\n          />\n          <textarea\n            id=\"text\"\n            onChange={this.handleChange}\n            className=\"add__text\"\n            placeholder=\"Текст новости\"\n            value={text}\n          />\n          <textarea\n            id=\"bigText\"\n            onChange={this.handleChange}\n            className=\"add__text\"\n            placeholder=\"Текст новости подробно\"\n            value={bigText}\n          />\n          <label className=\"add__checkrule\">\n            <input type=\"checkbox\" onChange={this.handleCheckboxChange} /> Я\n            согласен с правилами\n          </label>\n          <button\n            className=\"add__btn\"\n            onClick={this.onBtnClickHandler}\n            disabled={!this.validate()}\n          >\n            Добавить новость\n          </button>\n        </form>\n      );\n    }\n  }\n  \n  Add.propTypes = {\n    onAddNews: PropTypes.func.isRequired\n  };\n\nexport { Add }"]},"metadata":{},"sourceType":"module"}