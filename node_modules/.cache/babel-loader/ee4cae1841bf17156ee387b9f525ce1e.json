{"ast":null,"code":"import _toConsumableArray from \"/home/temir/projects/react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/temir/projects/react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/temir/projects/react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/temir/projects/react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/temir/projects/react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/temir/projects/react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/temir/projects/react-app/src/App.js\";\nimport React from 'react';\nimport { Add } from './components/Add';\nimport { News } from './components/News';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      news: null,\n      isLoading: false // статус для манипуляций \"прелоадером\" (\"Загружаю...\" в нашем случае)\n\n    };\n\n    _this.handleAddNews = function (data) {\n      var nextNews = [data].concat(_toConsumableArray(_this.state.news));\n\n      _this.setState({\n        news: nextNews\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // ставим isLoading true, \n      // то есть запрос за даннмыи начался\n      // фактически он начнется в строке с fetch,\n      // но на переход от одной строки к другой\n      // пройдут миллисекунды\n      this.setState({\n        isLoading: true\n      });\n      fetch('http://localhost:3000/data/newsData.json').then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        // запрос завершился успешно,\n        // делаем isLoading: false\n        // в news кладем пришедшие данные\n        _this2.setState({\n          isLoading: false,\n          news: data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          news = _this$state.news,\n          isLoading = _this$state.isLoading;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Add, {\n        onAddNews: this.handleAddNews,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"\\u041D\\u043E\\u0432\\u043E\\u0441\\u0442\\u0438\"), isLoading && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0436\\u0430\\u044E...\")\n      /*если isLoadin = false, то отобразить <p>*/\n      , Array.isArray(news) && React.createElement(News, {\n        data: news\n        /*если new = array, то отобразить news*/\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/home/temir/projects/react-app/src/App.js"],"names":["React","Add","News","App","state","news","isLoading","handleAddNews","data","nextNews","setState","fetch","then","response","json","Array","isArray","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,kBAApB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAO,WAAP;;IAEMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE,IADA;AAENC,MAAAA,SAAS,EAAE,KAFL,CAEW;;AAFX,K;;UAwBRC,a,GAAgB,UAAAC,IAAI,EAAI;AACtB,UAAMC,QAAQ,IAAID,IAAJ,4BAAa,MAAKJ,KAAL,CAAWC,IAAxB,EAAd;;AACA,YAAKK,QAAL,CAAc;AAAEL,QAAAA,IAAI,EAAEI;AAAR,OAAd;AACD,K;;;;;;;wCAtBmB;AAAA;;AAClB;AACA;AACA;AACA;AACA;AACA,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,SAAS,EAAE;AAAb,OAAd;AACAK,MAAAA,KAAK,CAAC,0CAAD,CAAL,CACGC,IADH,CACQ,UAAAC,QAAQ,EAAI;AAChB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,OAHH,EAIGF,IAJH,CAIQ,UAAAJ,IAAI,EAAI;AACZ;AACA;AACA;AACA,QAAA,MAAI,CAACE,QAAL,CAAc;AAAEJ,UAAAA,SAAS,EAAE,KAAb;AAAoBD,UAAAA,IAAI,EAAEG;AAA1B,SAAd;AACD,OATH;AAUD;;;6BAMQ;AAAA,wBACqB,KAAKJ,KAD1B;AAAA,UACCC,IADD,eACCA,IADD;AAAA,UACOC,SADP,eACOA,SADP;AAGP,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAE,KAAKC,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAFF,EAGGD,SAAS,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmB;AAHnC,QAIGS,KAAK,CAACC,OAAN,CAAcX,IAAd,KAAuB,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAEA;AAAM;AAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJ1B,CADF;AAQD;;;;EAxCeL,KAAK,CAACiB,S;;AA2CxB,eAAed,GAAf","sourcesContent":["import React from 'react'\nimport { Add } from './components/Add'\nimport { News } from './components/News'\nimport './App.css'\n\nclass App extends React.Component {\n  state = {\n    news: null,\n    isLoading: false,// статус для манипуляций \"прелоадером\" (\"Загружаю...\" в нашем случае)\n  }\n\n  componentDidMount() {\n    // ставим isLoading true, \n    // то есть запрос за даннмыи начался\n    // фактически он начнется в строке с fetch,\n    // но на переход от одной строки к другой\n    // пройдут миллисекунды\n    this.setState({ isLoading: true })\n    fetch('http://localhost:3000/data/newsData.json')\n      .then(response => {\n        return response.json()\n      })\n      .then(data => {\n        // запрос завершился успешно,\n        // делаем isLoading: false\n        // в news кладем пришедшие данные\n        this.setState({ isLoading: false, news: data })\n      })\n  }\n\n  handleAddNews = data => {\n    const nextNews = [data, ...this.state.news]\n    this.setState({ news: nextNews })\n  }\n  render() {\n    const { news, isLoading } = this.state\n    \n    return (\n      <React.Fragment>\n        <Add onAddNews={this.handleAddNews} />\n        <h3>Новости</h3>\n        {isLoading && <p>Загружаю...</p> /*если isLoadin = false, то отобразить <p>*/ }  \n        {Array.isArray(news) && <News data={news} /*если new = array, то отобразить news*//>}\n      </React.Fragment>\n    )\n  }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}